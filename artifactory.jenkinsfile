#!groovy

@Library('jenkinslib@master') _

//以下的方法都定义在sharelib文件中
def build = new org.devops.build()
def tools = new org.devops.tools()
def gitlab = new org.devops.gitlab()
def toemail = new org.devops.toemail()
def artifactory=new org.devops.artifactory()

def runOpts
//env 以下的参数都在参数化配置中
String buildType = "${env.buildType}"
String buildShell = "${env.buildShell}"
String srcUrl = "${env.srcUrl}"
String branchName = "${env.branchName}"
String artifactUrl = "${env.artifactUrl}"



//pipeline
pipeline{
    agent any
    
    
    stages{

        stage("CheckOut"){
            steps{
                script{
                   
                    
                    println("${branchName}")
                
                    tools.PrintMes("获取代码","green")
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], 
                                      doGenerateSubmoduleConfigurations: false, 
                                      extensions: [], 
                                      submoduleCfg: [], 
                                      userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: "${srcUrl}"]]])

                }
            }
        }
        stage("Build"){
            steps{
                script{
                
                tools.PrintMes("<======================执行打包===========================>","green")
                artifactory.main(buildType,buildShell)
                tools.PrintMes("<======================上传制品===========================>","green")
                artifactory.PushArtifact()
  
                }
            }
       }
    }  
}
